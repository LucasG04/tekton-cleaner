apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "tekton-cleaner.fullname" . }}
  labels:
    {{- include "tekton-cleaner.labels" . | nindent 4 }}
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccount: {{ include "tekton-cleaner.fullname" . }}
          containers:
            - name: kubectl
              image: {{ .Values.k8sImage }}
              env:
                - name: NUM_TO_KEEP
                  value: "{{ .Values.numberOfRunsToKeep }}"
              command:
                - /bin/bash
                - -c
                - >
                  while read -r PIPELINE; do
                    while read -r PIPELINE_TO_REMOVE; do
                      test -n "${PIPELINE_TO_REMOVE}" || continue;
                      kubectl delete ${PIPELINE_TO_REMOVE} \
                          && echo "$(date -Is) PipelineRun ${PIPELINE_TO_REMOVE} deleted." \
                          || echo "$(date -Is) Unable to delete PipelineRun ${PIPELINE_TO_REMOVE}.";
                    done < <(kubectl get pipelinerun -l tekton.dev/pipeline=${PIPELINE} --sort-by=.metadata.creationTimestamp -o name | head -n -${NUM_TO_KEEP});
                  done < <(kubectl get pipelinerun -o go-template='{{range .items}}{{index .metadata.labels "tekton.dev/pipeline"}}{{"\n"}}{{end}}' | uniq);
              resources:
                requests:
                  cpu: 50m
                  memory: 32Mi
                limits:
                  cpu: 100m
                  memory: 64Mi